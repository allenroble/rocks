
/*
 * This file is part of Eqela Rocks
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

class is ConsoleApplicationMain:

import capex.console
import capex.text

var source as File
var output as File

func initialize override as bool
{
	foreach arg in args {
		if arg.isParameter() {
			assert source == null:
				Log.error(ctx, "Only one source path can be specified")
			source = File.forPath(arg.parameter)
		}
		else if arg.isOption("output") {
			output = File.forPath(arg.value)
		}
		else {
			arg.reportAsUnsupported(ctx)
			return false
		}
	}
	return true
}

func toHtml(doc as RichTextDocument) as string
{
	assert doc
	var html = assert doc.toHtml(null)
	var template = TEXTFILE "doctemplate.html"
	var data as DynamicMap
	var md = doc.getAllMetadata()
	if md:
		data = md.duplicateMap()
	if not data:
		data = new DynamicMap()
	data.set("content", html)
	return TextTemplate.processString(template, "<%", "%>", data)
}

func execute override as bool
{
	assert source:
		Log.error(ctx, "No source file specified.")
	var doc = assert RichTextWikiMarkupParser.parseFile(source):
		Log.error(ctx, "Failed to parse source file: `" .. source.getPath() .. "'")
	var html = assert toHtml(doc):
		Log.error(ctx, "Failed to convert to HTML: `" .. source.getPath() .. "'")
	if output {
		assert output.setContentsUTF8(html):
			Log.error(ctx, "Failed to write file: `" .. output.getPath() .. "'")
	}
	else {
		PRINT html
	}
	return true
}

main:
	return executeMain(new this(), args)
