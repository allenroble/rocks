
/*
 * This file is part of Eqela Rocks
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

class abstract:

prop file as File
prop fileName as string
prop fileEncoding = "UTF-8"
prop actions as vector<ActionCommand>
var ctx protected as LoggingContext

func setContext(ctx as LoggingContext):
	this.ctx = ctx

func addAction(action as ActionCommand) as this
{
	if action {
		if not actions:
			actions = new vector<ActionCommand>
		actions += action
	}
	return this
}

func getOriginalContent as string
{
	assert file
	return file.getContentsString(getFileEncoding())
}

func getModifiedContentForFile(file as File, fileName as string) abstract as string

func getModifiedContent as string:
	return getModifiedContentForFile(file, fileName)

func getDiff as string
{
	assert file
	var orig = assert getOriginalContent()
	var modd = assert getModifiedContent()
	return UnifiedDiff.execute(file.baseName(), orig, modd)
}
